# Docker Compose configuration for Claude Nexus Proxy
# This file is located in the docker/ directory
# 
# Usage from project root:
#   ./docker-up.sh up -d
# Or from docker directory:
#   docker compose --env-file ../.env up -d

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: claude-nexus-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: claude_proxy
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/init-database.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - tools

  # Proxy Service
  proxy:
    image: alanpurestake/claude-nexus-proxy:latest
    container_name: claude-nexus-proxy
    environment:
      # Server configuration
      PORT: 3000
      HOST: 0.0.0.0
      
      # Claude API configuration
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      CREDENTIALS_DIR: /app/credentials
      
      # Database configuration
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/claude_proxy
      STORAGE_ENABLED: "true"
      
      # Telemetry
      TELEMETRY_ENDPOINT: ${TELEMETRY_ENDPOINT}
      
      # Slack notifications (optional)
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      SLACK_CHANNEL: ${SLACK_CHANNEL}
      SLACK_USERNAME: ${SLACK_USERNAME:-Claude Nexus Proxy}
      SLACK_ICON_EMOJI: ${SLACK_ICON_EMOJI:-:robot_face:}
      SLACK_ENABLED: ${SLACK_ENABLED:-true}
      
      # Debug
      DEBUG: ${DEBUG:-false}
    volumes:
      - ../credentials:/app/credentials:ro
      - ../client-setup:/app/client-setup:ro
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev

  # Dashboard Service
  dashboard:
    image: alanpurestake/claude-nexus-dashboard:latest
    environment:
      # Server configuration
      PORT: 3001
      HOST: 0.0.0.0
      
      # Dashboard authentication
      DASHBOARD_API_KEY: ${DASHBOARD_API_KEY}
      
      # Proxy API URL for data access
      PROXY_API_URL: http://proxy:3000
      
      # Database configuration
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/claude_proxy
    ports:
      - "3001:3001"
    depends_on:
      proxy:
        condition: service_started
    restart: unless-stopped
    profiles:
      - dev

  # Optional: pgAdmin for database management
  # To enable: docker-compose --profile tools up
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    profiles:
      - tools

  # Claude CLI Service - Run Claude CLI connected to the proxy
  claude-cli:
    build:
      context: ./claude-cli
      dockerfile: Dockerfile
    container_name: claude-cli
    environment:
      # API Key for Bearer token authentication
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
    volumes:
      # Mount workspace for file access
      - ../:/workspace
    depends_on:
      proxy:
        condition: service_started
    stdin_open: true
    tty: true
    profiles:
      - claude


  # Proxy Service
  proxy-prod:
    image: alanpurestake/claude-nexus-proxy:latest
    container_name: claude-nexus-proxy
    env_file: ../.env
    environment:
      # Server configuration
      PORT: 3000
      HOST: 0.0.0.0
      
      # Claude API configuration
      CREDENTIALS_DIR: /app/credentials
      # Debug
      DEBUG: ${DEBUG:-true}
    volumes:
      - ../.claude:/app/credentials:ro
      - ../client-setup:/app/client-setup:ro
    ports:
      - "3000:3000"
    restart: unless-stopped
    profiles:
      - prod

  # Dashboard Service
  dashboard-prod:
    image: alanpurestake/claude-nexus-dashboard:latest
    env_file: ../.env
    environment:
      # Server configuration
      PORT: 3001
      HOST: 0.0.0.0
      
      # Proxy API URL for data access
      PROXY_API_URL: http://proxy-prod:3000
    ports:
      - "3001:3001"
    depends_on:
      proxy-prod:
        condition: service_started
    restart: unless-stopped
    profiles:
      - prod

volumes:
  postgres_data:

networks:
  default:
    name: claude-nexus-network