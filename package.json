{
  "name": "claude-nexus-monorepo",
  "version": "2.0.0",
  "private": true,
  "type": "module",
  "repository": {
    "type": "git",
    "url": "https://github.com/moonsong-labs/claude-nexus-proxy.git"
  },
  "workspaces": [
    "packages/*",
    "services/*"
  ],
  "scripts": {
    "dev:proxy": "./scripts/dev/dev-proxy.sh",
    "dev:dashboard": "./scripts/dev/dev-dashboard.sh",
    "dev": "echo 'Starting both services...' && concurrently -n proxy,dashboard -c blue,green \"bun run dev:proxy\" \"bun run dev:dashboard\"",
    "build:shared": "cd packages/shared && bun run build",
    "build:proxy": "cd services/proxy && bun run build",
    "build:dashboard": "cd services/dashboard && bun run build",
    "build:proxy:production": "cd services/proxy && bun run build:production",
    "build:dashboard:production": "cd services/dashboard && bun run build:production",
    "prebuild": "bun run typecheck",
    "build": "bun run build:shared && bun run build:proxy && bun run build:dashboard",
    "build:production": "bun run typecheck && bun run build:shared && concurrently -n proxy,dashboard \"bun run build:proxy:production\" \"bun run build:dashboard:production\"",
    "build:all": "bun run build:shared && concurrently -n proxy,dashboard \"bun run build:proxy\" \"bun run build:dashboard\"",
    "start:proxy": "cd services/proxy && bun run start:prod",
    "start:dashboard": "cd services/dashboard && bun run start:prod",
    "start": "concurrently -n proxy,dashboard -c blue,green \"bun run start:proxy\" \"bun run start:dashboard\"",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:proxy": "docker-compose logs -f proxy",
    "docker:logs:dashboard": "docker-compose logs -f dashboard",
    "typecheck": "bun run --filter '*' typecheck",
    "typecheck:proxy": "cd services/proxy && bun run typecheck",
    "typecheck:dashboard": "cd services/dashboard && bun run typecheck",
    "typecheck:ci": "bun run typecheck || (echo '‚ùå Type errors found! Run \"bun run typecheck\" to see details.' && exit 1)",
    "lint": "bun run --filter '*' lint",
    "clean": "bun run --filter '*' clean",
    "test": "bun test",
    "test:unit": "bun test tests/unit",
    "test:integration": "bun test tests/integration",
    "test:e2e": "bun test tests/e2e",
    "test:coverage": "bun test --coverage",
    "test:watch": "bun test --watch",
    "db:migrate": "for file in scripts/db/migrations/*.ts; do bun run \"$file\"; done",
    "db:migrate:init": "bun run scripts/db/migrations/000-init-database.ts",
    "db:migrate:conversations": "bun run scripts/db/migrations/001-add-conversation-tracking.ts",
    "db:migrate:optimize": "bun run scripts/db/migrations/002-optimize-conversation-indexes.ts",
    "db:migrate:token-usage": "bun run scripts/db/migrations/001-token-usage-tracking.ts",
    "db:analyze-conversations": "bun run scripts/db/analyze-conversations.ts",
    "db:rebuild-conversations": "bun run scripts/db/rebuild-conversations.ts",
    "db:recalculate-counts": "bun run scripts/db/recalculate-message-counts.ts",
    "db:backup": "bun run scripts/db/backup-database.ts",
    "db:backup:file": "bun run scripts/db/backup-database.ts --file",
    "auth:generate-key": "bun run scripts/auth/generate-api-key.ts",
    "auth:oauth-status": "bun run scripts/auth/check-oauth-status.ts",
    "auth:oauth-refresh": "bun run scripts/auth/oauth-refresh-all.ts",
    "docker:secrets": "./scripts/create-docker-secrets.sh",
    "setup": "bun install && bun run build:shared",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "precommit": "bun run typecheck && bun run format:check"
  },
  "devDependencies": {
    "bun-types": "latest",
    "@types/pg": "^8.11.10",
    "vitest": "^1.0.0",
    "@vitest/coverage-c8": "^0.33.0",
    "supertest": "^6.3.0",
    "@types/supertest": "^6.0.0",
    "msw": "^2.0.0",
    "@faker-js/faker": "^8.0.0",
    "testcontainers": "^10.0.0",
    "concurrently": "^8.2.2",
    "prettier": "^3.4.2",
    "eslint": "^9.17.0",
    "@eslint/js": "^9.17.0",
    "typescript-eslint": "^8.18.0"
  },
  "dependencies": {
    "lru-cache": "^11.1.0",
    "marked": "^15.0.12",
    "sanitize-html": "^2.17.0"
  }
}
