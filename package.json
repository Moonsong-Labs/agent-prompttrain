{
  "name": "claude-nexus-monorepo",
  "version": "2.0.0",
  "private": true,
  "type": "module",
  "repository": {
    "type": "git",
    "url": "https://github.com/moonsong-labs/claude-nexus.git"
  },
  "workspaces": [
    "packages/*",
    "services/*"
  ],
  "scripts": {
    "dev:proxy": "./scripts/dev/dev-proxy.sh",
    "dev:dashboard": "./scripts/dev/dev-dashboard.sh",
    "dev": "echo 'Starting both services...' && concurrently -n proxy,dashboard -c blue,green \"bun run dev:proxy\" \"bun run dev:dashboard\"",
    "build:shared": "cd packages/shared && bun run build",
    "build:proxy": "cd services/proxy && bun run build",
    "build:dashboard": "cd services/dashboard && bun run build",
    "build:proxy:production": "cd services/proxy && bun run build:production",
    "build:dashboard:production": "cd services/dashboard && bun run build:production",
    "build": "bun run build:shared && bun run build:proxy && bun run build:dashboard",
    "build:production": "bun run typecheck && bun run build:shared && concurrently -n proxy,dashboard \"bun run build:proxy:production\" \"bun run build:dashboard:production\"",
    "build:all": "bun run build:shared && concurrently -n proxy,dashboard \"bun run build:proxy\" \"bun run build:dashboard\"",
    "start:proxy": "cd services/proxy && bun run start:prod",
    "start:dashboard": "cd services/dashboard && bun run start:prod",
    "start": "concurrently -n proxy,dashboard -c blue,green \"bun run start:proxy\" \"bun run start:dashboard\"",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:proxy": "docker-compose logs -f proxy",
    "docker:logs:dashboard": "docker-compose logs -f dashboard",
    "typecheck": "tsc --build --force",
    "typecheck:proxy": "tsc --build services/proxy",
    "typecheck:dashboard": "tsc --build services/dashboard",
    "typecheck:ci": "tsc --build || (echo '‚ùå Type errors found! Run \"bun run typecheck\" to see details.' && exit 1)",
    "lint": "bun run --filter '*' lint",
    "clean": "bun run --filter '*' clean",
    "test": "./scripts/run-all-tests.sh",
    "test:parallel": "bun test",
    "test:ci": "bun test test/unit services/proxy/tests tests/unit services/dashboard/src/routes/__tests__ services/proxy/src/routes/__tests__ services/dashboard/src/layout/__tests__ packages/shared/src/**/__tests__ && ./scripts/test-integration.sh",
    "test:unit": "bun test test/unit",
    "test:integration": "./scripts/test-integration.sh",
    "test:theme": "bun test services/dashboard/src/layout/__tests__",
    "test:e2e": "bun test test/e2e",
    "test:playwright": "playwright test",
    "test:playwright:ui": "playwright test --ui",
    "test:e2e:smoke": "playwright test --grep @smoke",
    "test:e2e:journey": "playwright test --grep @journey",
    "test:e2e:all": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:css": "bun test test/unit/css-validation.test.ts",
    "test:coverage": "bun test --coverage",
    "test:watch": "bun test --watch",
    "test:all": "bun test",
    "test:all:playwright": "bun test && playwright test",
    "db:analyze-conversations": "bun run scripts/db/analyze-conversations.ts",
    "db:rebuild-conversations": "bun run scripts/db/rebuild-conversations.ts",
    "generate:prompts": "bun run scripts/generate-prompt-assets.ts",
    "db:recalculate-counts": "bun run scripts/db/recalculate-message-counts.ts",
    "db:backup": "bun run scripts/db/backup-database.ts",
    "db:backup:file": "bun run scripts/db/backup-database.ts --file",
    "db:migrate:token-usage": "bun run scripts/migrate-token-usage.ts",
    "db:copy-conversation": "bun run scripts/copy-conversation.ts",
    "auth:generate-key": "bun run scripts/auth/generate-api-key.ts",
    "auth:oauth-status": "bun run scripts/auth/check-oauth-status.ts",
    "auth:oauth-refresh": "bun run scripts/auth/oauth-refresh-all.ts",
    "test:generate-fixture": "bun run scripts/generate-conversation-test-fixture.ts",
    "ai:check-jobs": "bun run scripts/check-analysis-jobs.ts",
    "ai:check-content": "bun run scripts/check-analysis-content.ts",
    "ai:reset-stuck": "bun run scripts/reset-stuck-analysis-jobs.ts",
    "ai:fail-exceeded": "bun run scripts/fail-exceeded-retry-jobs.ts",
    "ai:test-max-retry": "bun run scripts/test-max-retry-failure.ts",
    "ai:process-pending": "bun run scripts/process-pending-analyses.ts",
    "docker:secrets": "./scripts/create-docker-secrets.sh",
    "setup": "bun install && bun run build:shared",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "precommit": "bun run typecheck && bun run format:check",
    "prepare": "husky"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@faker-js/faker": "^9.8.0",
    "@playwright/test": "^1.54.2",
    "@types/glob": "^9.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/pg": "^8.11.10",
    "bun-types": "latest",
    "concurrently": "^8.2.2",
    "eslint": "^9.17.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.2",
    "playwright": "^1.54.2",
    "prettier": "^3.4.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.18.0"
  },
  "dependencies": {
    "@octokit/rest": "^22.0.0",
    "dotenv": "^16.4.7",
    "gray-matter": "^4.0.3",
    "handlebars": "^4.7.8",
    "js-yaml": "^4.1.0",
    "pg": "^8.16.3"
  }
}
