# =============================================================================
# CLAUDE NEXUS PROXY - ENVIRONMENT CONFIGURATION
# =============================================================================
#
# SECURITY WARNING:
# This is a sample configuration file. NEVER commit actual secrets or credentials!
# All values marked as REPLACE_ME or in <brackets> must be replaced before use.
#
# Quick Start:
# 1. Copy this file: cp .env.example .env
# 2. Fill in the REQUIRED section below
# 3. Configure optional features as needed
# 4. Advanced settings can be left as defaults
#
# For detailed documentation, see: docs/configuration.md
#

# =============================================================================
# REQUIRED SETTINGS (Must be configured for basic operation)
# =============================================================================

# PostgreSQL connection string
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://user:REPLACE_ME@localhost:5432/claude_nexus

# Dashboard authentication key (generate with: openssl rand -base64 32)
# Used to access the monitoring dashboard
DASHBOARD_API_KEY=<generate-secure-key-here>

# Directory containing domain credential files
# See credentials/README.md for setup instructions
CREDENTIALS_DIR=./credentials

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Proxy service settings
PORT=3000                    # Port for proxy service (default: 3000)
HOST=0.0.0.0                # Host to bind to (default: 0.0.0.0)

# Dashboard service settings  
DASHBOARD_PORT=3001          # Port for dashboard (default: 3001)
DASHBOARD_HOST=0.0.0.0       # Dashboard host (default: 0.0.0.0)

# Proxy API URL (used by dashboard to connect to proxy)
# Default: http://localhost:3000
PROXY_API_URL=http://localhost:3000

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable request/response storage in database (true/false)
# Default: false
STORAGE_ENABLED=true

# Enable debug logging - masks sensitive data (true/false)
# Default: false
DEBUG=false

# Enable SQL query logging (true/false)
# Default: false
DEBUG_SQL=false

# Require client authentication via API keys (true/false)
# Set to false for easier local development
# Default: true
ENABLE_CLIENT_AUTH=true

# Log level (error, warn, info, debug)
# Default: info
LOG_LEVEL=info

# =============================================================================
# MONITORING & NOTIFICATIONS
# =============================================================================

# Slack webhook for alerts and notifications
# Leave empty to disable Slack integration
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#alerts
SLACK_USERNAME=Claude Nexus Proxy
SLACK_ICON_EMOJI=:robot_face:
SLACK_ENABLED=false

# Telemetry endpoint for metrics collection
# Leave empty to disable telemetry
TELEMETRY_ENDPOINT=
TELEMETRY_ENABLED=false

# =============================================================================
# AI ANALYSIS (Optional Feature)
# =============================================================================

# Enable AI-powered conversation analysis
# Default: false
AI_WORKER_ENABLED=false

# Gemini API configuration (required if AI analysis is enabled)
GEMINI_API_KEY=<your-gemini-api-key-here>
GEMINI_API_URL=https://generativelanguage.googleapis.com/v1beta/models
GEMINI_MODEL_NAME=gemini-2.0-flash-exp

# Worker settings
AI_WORKER_POLL_INTERVAL_MS=5000       # Poll interval (default: 5000ms)
AI_WORKER_MAX_CONCURRENT_JOBS=3       # Max concurrent jobs (default: 3)
AI_WORKER_JOB_TIMEOUT_MINUTES=5       # Job timeout (default: 5 minutes)
AI_ANALYSIS_MAX_RETRIES=3             # Max retry attempts (default: 3)

# =============================================================================
# MCP (Model Context Protocol) Server - Optional
# =============================================================================

# Enable MCP server for prompt management (true/false)
# Default: false
MCP_ENABLED=false

# Local prompts configuration
MCP_PROMPTS_DIR=./prompts            # Directory for prompt YAML files
MCP_WATCH_FILES=true                 # Hot-reload on file changes
MCP_CACHE_TTL=300                    # Cache TTL in seconds
MCP_CACHE_SIZE=1000                  # Max prompts in cache

# Optional: GitHub sync for prompts
# MCP_GITHUB_OWNER=<your-org>
# MCP_GITHUB_REPO=<prompt-library>
# MCP_GITHUB_BRANCH=main
# MCP_GITHUB_TOKEN=ghp_REPLACE_ME
# MCP_GITHUB_PATH=prompts/
# MCP_SYNC_INTERVAL=300

# =============================================================================
# SPARK INTEGRATION (Optional)
# =============================================================================

# Spark API for recommendation feedback
# Leave empty to disable Spark integration
SPARK_API_URL=
SPARK_API_KEY=

# =============================================================================
# PERFORMANCE TUNING (Advanced)
# =============================================================================

# Dashboard cache TTL in seconds (0 to disable)
# Default: 30
DASHBOARD_CACHE_TTL=30

# Claude API request timeout in milliseconds
# Default: 600000 (10 minutes)
# CLAUDE_API_TIMEOUT=600000

# Proxy server timeout in milliseconds (should be > CLAUDE_API_TIMEOUT)
# Default: 660000 (11 minutes)
# PROXY_SERVER_TIMEOUT=660000

# SQL query performance threshold in milliseconds
# Queries slower than this will be logged as warnings
# Default: 5000 (5 seconds)
# SLOW_QUERY_THRESHOLD_MS=5000

# =============================================================================
# STORAGE & DATABASE (Advanced)
# =============================================================================

# Storage adapter settings
# STORAGE_ADAPTER_CLEANUP_MS=300000      # Cleanup interval (default: 5 minutes)
# STORAGE_ADAPTER_RETENTION_MS=3600000   # Retention time (default: 1 hour)

# Database connection pool
# DB_POOL_SIZE=20                        # Connection pool size (default: 20)

# Security
# API_KEY_SALT=<custom-salt-for-hashing> # Salt for API key hashing

# =============================================================================
# RATE LIMITING (Advanced)
# =============================================================================

# Per-client rate limiting
# RATE_LIMIT_WINDOW_MS=3600000           # Window size (default: 1 hour)
# RATE_LIMIT_MAX_REQUESTS=1000           # Max requests per window
# RATE_LIMIT_MAX_TOKENS=1000000         # Max tokens per window

# Per-domain rate limiting
# DOMAIN_RATE_LIMIT_WINDOW_MS=3600000    # Window size (default: 1 hour)
# DOMAIN_RATE_LIMIT_MAX_REQUESTS=5000    # Max requests per window
# DOMAIN_RATE_LIMIT_MAX_TOKENS=5000000   # Max tokens per window

# =============================================================================
# CIRCUIT BREAKER (Advanced)
# =============================================================================

# Protection against repeated failures
# CIRCUIT_BREAKER_FAILURE_THRESHOLD=5    # Failures before opening (default: 5)
# CIRCUIT_BREAKER_SUCCESS_THRESHOLD=3    # Successes to close (default: 3)
# CIRCUIT_BREAKER_TIMEOUT=120000         # Timeout in ms (default: 2 minutes)
# CIRCUIT_BREAKER_VOLUME_THRESHOLD=10    # Min requests to evaluate
# CIRCUIT_BREAKER_ERROR_PERCENTAGE=50    # Error percentage threshold

# =============================================================================
# REQUEST VALIDATION (Advanced)
# =============================================================================

# Request size and content limits
# MAX_REQUEST_SIZE=10485760              # Max request size (default: 10MB)
# MAX_MESSAGE_COUNT=100                  # Max messages per request
# MAX_SYSTEM_LENGTH=10000                # Max system prompt length
# MAX_MESSAGE_LENGTH=100000              # Max individual message length
# MAX_TOTAL_LENGTH=500000                # Max total content length

# =============================================================================
# AI ANALYSIS TUNING (Advanced)
# =============================================================================

# Token management for AI analysis
# AI_MAX_PROMPT_TOKENS=855000            # Max tokens for analysis prompt
# AI_HEAD_MESSAGES=5                     # Messages to keep from start
# AI_TAIL_MESSAGES=20                    # Messages to keep from end
# AI_ANALYSIS_INPUT_TRUNCATION_TARGET_TOKENS=8192
# AI_ANALYSIS_TRUNCATE_FIRST_N_TOKENS=1000
# AI_ANALYSIS_TRUNCATE_LAST_M_TOKENS=4000

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Collect request samples for testing (true/false)
# Default: false
COLLECT_TEST_SAMPLES=false

# Directory for test samples
# Default: test-samples
TEST_SAMPLES_DIR=test-samples

# =============================================================================
# END OF CONFIGURATION
# =============================================================================