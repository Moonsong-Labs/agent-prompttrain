version: 1
generated_by: repo-knowledge-tracker
last_updated: '2025-01-10T00:00:00Z'
entries:
  - path: 'scripts/db/migrations/012-project-terminology.ts'
    title: 'Project Schema Migration'
    why_important: 'Defines complete project table schema including is_private column, project_members table for access control'
    topics: ['database', 'projects', 'privacy', 'schema', 'migration']
    owners: ['@backend-team']
    linked_docs: []
    related_components:
      - 'packages/shared/src/database/queries/project-queries.ts'
      - 'packages/shared/src/database/queries/project-member-queries.ts'
    dependencies:
      direct: ['pg']
      indirect: []
    update_triggers:
      - 'Changes to project privacy requirements'
      - 'New project fields needed'
      - 'Access control changes'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: ''
    recommended_action: 'is_private column already exists (line 224-230), ready for use'
    notes: 'Migration creates projects table with is_private boolean (default false), project_members for user-project relationships. Indexes on project_members: project_id (276), user_email (281), role (286)'

  - path: 'packages/shared/src/database/queries/project-queries.ts'
    title: 'Project Database Queries'
    why_important: 'Core project CRUD operations, already supports is_private in create/update functions'
    topics: ['database', 'projects', 'api', 'crud']
    owners: ['@backend-team']
    linked_docs: []
    related_components:
      - 'services/dashboard/src/routes/projects.ts'
      - 'services/dashboard/src/routes/projects-ui.ts'
    dependencies:
      direct: ['pg']
      indirect: []
    update_triggers:
      - 'New project operations needed'
      - 'Project data structure changes'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: ''
    recommended_action: 'is_private already handled in createProject (line 46) and updateProject (lines 166-168)'
    notes: 'Functions ready for privacy feature, just need UI updates'

  - path: 'packages/shared/src/database/queries/project-member-queries.ts'
    title: 'Project Member Queries'
    why_important: 'Manages project membership, critical for access control in privacy feature. Thread-safe with row locking'
    topics: ['database', 'access-control', 'members', 'authorization']
    owners: ['@backend-team']
    linked_docs: []
    related_components:
      - 'services/dashboard/src/routes/project-members.ts'
      - 'services/dashboard/src/middleware/project-ownership.ts'
    dependencies:
      direct: ['pg']
      indirect: []
    update_triggers:
      - 'Changes to membership model'
      - 'New access control requirements'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: ''
    recommended_action: 'Review isProjectMember function for use in conversation filtering'
    notes: 'Key functions: isProjectMember (184-201), isProjectOwner (164-180), addProjectMember (15-42). Uses transactions with row locking for concurrent safety (54-101, 214-268)'

  - path: 'services/dashboard/src/storage/reader.ts'
    title: 'Dashboard Storage Reader - Privacy Filtering'
    why_important: 'ALREADY IMPLEMENTS privacy filtering for conversations based on project membership. Central data access layer with caching'
    topics: ['privacy', 'filtering', 'conversations', 'data-access', 'caching']
    owners: ['@dashboard-team']
    linked_docs: []
    related_components:
      - 'services/dashboard/src/routes/overview.ts'
      - 'services/dashboard/src/routes/conversation-detail.ts'
    dependencies:
      direct: ['pg', 'node-cache']
      indirect: []
    update_triggers:
      - 'Performance issues with queries'
      - 'New filtering requirements'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: 'Privacy filtering partial - only in some methods'
    recommended_action: 'CRITICAL: Privacy filtering exists in getRequestsByTrainId (134-146), getConversations (402-425), getConversationSummaries (699-819) but MISSING in getRequestDetails, getStats'
    notes: 'Uses NodeCache for performance (line 70). Key privacy JOIN: (p.is_private = false OR pm.user_email IS NOT NULL)'

  - path: 'services/dashboard/src/routes/projects-ui.ts'
    title: 'Projects UI Routes'
    why_important: 'Project creation/edit UI - needs update to add is_private checkbox'
    topics: ['ui', 'projects', 'forms', 'htmx']
    owners: ['@frontend-team']
    linked_docs: []
    related_components:
      - 'services/dashboard/src/routes/projects.ts'
      - 'packages/shared/src/database/queries/project-queries.ts'
    dependencies:
      direct: ['hono', 'htmx']
      indirect: []
    update_triggers:
      - 'New UI requirements'
      - 'Project form field additions'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: "Create form doesn't include is_private field"
    recommended_action: 'Add is_private checkbox to create form (around line 233-268)'
    notes: 'Need to add privacy toggle in create and edit forms'

  - path: 'services/dashboard/src/middleware/auth.ts'
    title: 'Dashboard Authentication Middleware'
    why_important: 'Extracts user principal (email) used for access control checks. Supports multiple auth methods'
    topics: ['auth', 'middleware', 'security', 'sso']
    owners: ['@security-team']
    linked_docs: ['docs/04-Architecture/ADRs/adr-027-mandatory-user-authentication.md']
    related_components:
      - 'services/dashboard/src/app.ts'
      - 'services/dashboard/src/storage/reader.ts'
    dependencies:
      direct: ['hono']
      indirect: ['oauth2-proxy', 'AWS ALB OIDC']
    update_triggers:
      - 'Auth provider changes'
      - 'New SSO requirements'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: ''
    recommended_action: 'Add email normalization helper for consistent comparisons'
    notes: 'Sets auth.principal (user email) in context. Supports dev mode (69-75), ALB OIDC (79-100), OAuth2-proxy (102-124)'

  - path: 'services/dashboard/src/app.ts'
    title: 'Dashboard App Main Entry'
    why_important: 'Wires auth middleware, passes user context to storage queries'
    topics: ['app', 'middleware', 'routing', 'context']
    owners: ['@dashboard-team']
    linked_docs: []
    related_components:
      - 'services/dashboard/src/middleware/auth.ts'
      - 'services/dashboard/src/storage/reader.ts'
    dependencies:
      direct: ['hono']
      indirect: []
    update_triggers:
      - 'New middleware requirements'
      - 'Route changes'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: ''
    recommended_action: ''
    notes: 'Lines 122-125 pass auth.principal to storage queries'

  - path: 'services/proxy/src/routes/api.ts'
    title: 'Proxy API Routes'
    why_important: 'API endpoints for conversations - may need privacy filtering for external access'
    topics: ['api', 'conversations', 'proxy']
    owners: ['@proxy-team']
    linked_docs: ['docs/02-User-Guide/api-reference.md']
    related_components:
      - 'services/dashboard/src/services/api-client.ts'
    dependencies:
      direct: ['hono', 'pg', 'zod']
      indirect: []
    update_triggers:
      - 'New API endpoints'
      - 'Query optimizations'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: 'No privacy filtering in /api/conversations endpoint'
    recommended_action: 'Consider adding optional auth middleware and privacy filtering to API conversations endpoint'
    notes: 'Lines 563+ define /api/conversations - currently no privacy filter. Stats endpoints also need privacy context'

  - path: 'services/proxy/src/middleware/client-auth.ts'
    title: 'Proxy Client Authentication'
    why_important: 'Handles API key and OAuth authentication for proxy requests. Could be extended for user context'
    topics: ['authentication', 'security', 'proxy']
    owners: ['@proxy-team']
    linked_docs: []
    related_components:
      - 'services/proxy/src/services/AuthenticationService.ts'
    dependencies:
      direct: ['hono']
      indirect: []
    update_triggers:
      - 'auth changes'
      - 'new auth methods'
    last_seen: '2025-01-10'
    last_reviewed_at: '2025-01-10'
    staleness_hints: ''
    recommended_action: 'Consider extracting user identity for privacy checks in API'
    notes: 'Could be extended to support user-based auth for privacy enforcement in API routes'
